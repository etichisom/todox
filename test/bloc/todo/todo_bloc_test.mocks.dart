// Mocks generated by Mockito 5.4.0 from annotations
// in todox/test/bloc/todo/todo_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:cloud_firestore/cloud_firestore.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:todox/core/data/todo/todo_data.dart' as _i5;
import 'package:todox/features/todo/data/repository/todo_repo_impl.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCollectionReference_0<T extends Object?> extends _i1.SmartFake
    implements _i2.CollectionReference<T> {
  _FakeCollectionReference_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TodoRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoRepositoryImpl extends _i1.Mock
    implements _i3.TodoRepositoryImpl {
  MockTodoRepositoryImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CollectionReference<Object?> get todoReference => (super.noSuchMethod(
        Invocation.getter(#todoReference),
        returnValue: _FakeCollectionReference_0<Object?>(
          this,
          Invocation.getter(#todoReference),
        ),
      ) as _i2.CollectionReference<Object?>);
  @override
  set todoReference(_i2.CollectionReference<Object?>? _todoReference) =>
      super.noSuchMethod(
        Invocation.setter(
          #todoReference,
          _todoReference,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<bool> addTodo(_i5.TodoData? todoData) => (super.noSuchMethod(
        Invocation.method(
          #addTodo,
          [todoData],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<bool> editTodo(_i5.TodoData? todoData) => (super.noSuchMethod(
        Invocation.method(
          #editTodo,
          [todoData],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Stream<List<_i5.TodoData>> getTodo(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #getTodo,
          [uid],
        ),
        returnValue: _i4.Stream<List<_i5.TodoData>>.empty(),
      ) as _i4.Stream<List<_i5.TodoData>>);
}
